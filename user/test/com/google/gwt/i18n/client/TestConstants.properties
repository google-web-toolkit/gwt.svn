# String
string:string
stringTrimsLeadingWhitespace =     stringTrimsLeadingWhitespace
# stringDoesNotTrimTrailingWhitespace ends with three blank spaces
stringDoesNotTrimTrailingThreeSpaces =     stringDoesNotTrimTrailingThreeSpaces   
stringEmpty:
stringJapaneseRed: あか
stringJapaneseGreen: みどり
stringJapaneseBlue: あお

# int      
intZero:0
intOne:1
intNegOne:-1
intMax:2147483647
intMin:-2147483648

# float
floatPi:3.14159
floatZero:0.0
floatOne:1.0
floatNegOne:-1.0
floatPosMax:3.4028235E38
floatPosMin:1.4E-45
floatNegMax:-3.4028235E38
floatNegMin:-1.4E-45

# double
doublePi:3.14159
doubleZero:0.0
doubleOne:1.0
doubleNegOne:-1.0
doublePosMax:1.7976931348623157E308
doublePosMin:4.9E-324
doubleNegMax:-1.7976931348623157E308
doubleNegMin:-4.9E-324

# String[]
stringArrayABCDEFG: A, B, C, D, E, F, G         
stringArraySizeOneEmptyString:
stringArraySizeOneX: X
stringArraySizeTwoBothEmpty: ,
stringArraySizeThreeAllEmpty:,,
stringArraySizeTwoWithEscapedComma: X, \\, Y 
stringArraySizeOneWithBackslashX: \\X
stringArraySizeThreeWithDoubleBackslash: X, \\ , Y 

# boolean
booleanFalse:false
booleanTrue:true

# Map

# values
keyA:valueA
keyB:valueB
keyC:valueC
keyD:valueD

# intentionally not invertible
keyX:valueZ
keyY:valueZ
keyZ:valueZ

# in order map
mapABCD: keyA, keyB, keyC, keyD

# backwards map
mapDCBA: keyD, keyC, keyB, keyA

# reordred up map
mapBACD: keyB, keyA, keyC, keyD

# dup map
mapBBB: keyB, keyB, keyB

# non-invertible map
mapXYZ: keyX, keyY, keyZ

# map with quoted keys (uncomment during desk tests; won't work in JUnit)
# mapXYZ: "keyX", "keyY", "keyZ"

# map with a missing key (uncomment during desk tests; won't work in JUnit)
# mapWithMissingKey: keyA, asdf, keyB 

# empty map
mapEmpty: 
